---
{{ if .Values.mailout.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
{{- with .Values.mailout.deploymentAnnotations }}
{{ toYaml . | indent 4 }}
{{- end }}
    image.openshift.io/triggers: |
      [{
        "from": {
          "kind": "ImageStreamTag",
          {{- if .Values.mailout.image.namespace }}
          "namespace": "{{ .Values.mailout.image.namespace }}",
          {{- end }}
          "name":"{{- if .Values.mailout.image.stream }}{{ .Values.mailout.image.name }}:{{ default "latest" .Values.mailout.image.tag }}{{- else }}{{ template "psd2.fullname" . }}-mailout:latest{{- end }}"
        },
        "fieldPath": "spec.template.spec.containers[?(@.name==\"mailout\")].image"
      }]
  name: {{ template "psd2.fullname" . }}-mailout
  labels:
{{ include "psd2.labels" . | indent 4 }}
    app.kubernetes.io/component: mailout
spec:
  serviceName: {{ template "psd2.fullname" . }}-mailout-hs
  replicas: {{ .Values.mailout.replicas }}
  selector:
    matchLabels:
{{ include "psd2.matchLabels" . | indent 6 }}
      app.kubernetes.io/component: mailout
  template:
    metadata:
      annotations:
        checksum/secret: {{ include (print $.Template.BasePath "/mailout/mailout-secret.yaml") . | sha256sum }}
{{- with .Values.keycloak.db.podAnnotations }}
{{ toYaml . | indent 8 }}
{{- end }}
      labels:
{{ include "psd2.matchLabels" . | indent 8 }}
        app.kubernetes.io/component: mailout
    spec:
      containers:
      - name: mailout
        image: " "
        imagePullPolicy: {{ .Values.mailout.image.pullPolicy }}
        tty: true
        ports:
        - name: smtp
          containerPort: 25
          protocol: TCP
        env:
        - name: TZ
          value: {{ .Values.timezone | quote }}
{{- range $name, $value := .Values.mailout.env }}
{{- if not (empty $value) }}
        - name: {{ $name | quote }}
          value: {{ tpl (toString $value) $ | quote }}
{{- end }}
{{- end }}
{{- range $name, $value := .Values.mailout.secrets }}
{{- if not ( empty $value) }}
        - name: {{ $name | quote }}
          valueFrom:
            secretKeyRef:
              name: {{ template "psd2.fullname" $ }}-mailout
              key: {{ $name | quote }}
{{- end }}
{{- end }}
      {{- if .Values.mailout.existingSecret }}
        envFrom:
        - secretRef:
            name: {{ .Values.mailout.existingSecret | quote }}
      {{- end }}
        resources:
{{ toYaml .Values.mailout.resources | indent 10 }}
        livenessProbe:
{{ toYaml .Values.mailout.livenessProbe | indent 10 }}
        readinessProbe:
{{ toYaml .Values.mailout.readinessProbe | indent 10 }}
        volumeMounts:
        - mountPath: /var/spool/mqueue/
          name: queue
{{- if not (.Values.mailout.persistence.enabled) }}
      volumes:
      - name: queue
        emptyDir: {}
{{- else }}
  volumeClaimTemplates:
  - metadata:
      name: queue
    spec:
      accessModes: [ "ReadWriteOnce" ]
      {{- with .Values.mailout.persistence.storageClass }}
      storageClassName: {{ . | quote }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.mailout.persistence.size }}
{{- end }}
{{- end }}
